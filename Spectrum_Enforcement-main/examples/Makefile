CXX = g++
LDFLAGS =
CXXFLAGS =
CPPFLAGS =
MAKE = make

all: classes1 classes client_s converg disk event_se ex1_stream exceptComplex except facility fac_ms gate gensys1 gensys2 gensys hist instrum jock mailbox_stats meter moving_average moving_q my_main myStuff prc_clas pre_res qhist qManEvent qManFac1 qManFac2 qManFac qmanMailbox1 qmanMailbox qmgr rand randStream rand_streams receiveAny rerun reset1 reset rnd_pri rnd_rob stla storages syn_fac1 syn_fac syn_stor tmd_resr tmd_wait

../lib/csim.cpp.a:
	(cd ../lib && $(MAKE))

classes1: classes1.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o classes1 classes1.cpp ../lib/csim.cpp.a -lm

classes: classes.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o classes classes.cpp ../lib/csim.cpp.a -lm

client_s: client_s.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o client_s client_s.cpp ../lib/csim.cpp.a -lm

converg: converg.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o converg converg.cpp ../lib/csim.cpp.a -lm

disk: disk.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o disk disk.cpp ../lib/csim.cpp.a -lm

event_se: event_se.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o event_se event_se.cpp ../lib/csim.cpp.a -lm

ex1_stream: ex1_stream.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o ex1_stream ex1_stream.cpp ../lib/csim.cpp.a -lm

exceptComplex: exceptComplex.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o exceptComplex exceptComplex.cpp ../lib/csim.cpp.a -lm

except: except.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o except except.cpp ../lib/csim.cpp.a -lm

facility: facility.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o facility facility.cpp ../lib/csim.cpp.a -lm

fac_ms: fac_ms.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o fac_ms fac_ms.cpp ../lib/csim.cpp.a -lm

gate: gate.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o gate gate.cpp ../lib/csim.cpp.a -lm

gensys1: gensys1.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o gensys1 gensys1.cpp ../lib/csim.cpp.a -lm

gensys2: gensys2.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o gensys2 gensys2.cpp ../lib/csim.cpp.a -lm

gensys: gensys.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o gensys gensys.cpp ../lib/csim.cpp.a -lm

hist: hist.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o hist hist.cpp ../lib/csim.cpp.a -lm

instrum: instrum.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o instrum instrum.cpp ../lib/csim.cpp.a -lm

jock: jock.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o jock jock.cpp ../lib/csim.cpp.a -lm

mailbox_stats: mailbox_stats.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o mailbox_stats mailbox_stats.cpp ../lib/csim.cpp.a -lm

meter: meter.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o meter meter.cpp ../lib/csim.cpp.a -lm

moving_average: moving_average.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o moving_average moving_average.cpp ../lib/csim.cpp.a -lm

moving_q: moving_q.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o moving_q moving_q.cpp ../lib/csim.cpp.a -lm

my_main: my_main.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o my_main my_main.cpp ../lib/csim.cpp.a -lm

myStuff: myStuff.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o myStuff myStuff.cpp ../lib/csim.cpp.a -lm

prc_clas: prc_clas.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o prc_clas prc_clas.cpp ../lib/csim.cpp.a -lm

pre_res: pre_res.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o pre_res pre_res.cpp ../lib/csim.cpp.a -lm

qhist: qhist.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o qhist qhist.cpp ../lib/csim.cpp.a -lm

qManEvent: qManEvent.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o qManEvent qManEvent.cpp ../lib/csim.cpp.a -lm

qManFac1: qManFac1.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o qManFac1 qManFac1.cpp ../lib/csim.cpp.a -lm

qManFac2: qManFac2.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o qManFac2 qManFac2.cpp ../lib/csim.cpp.a -lm

qManFac: qManFac.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o qManFac qManFac.cpp ../lib/csim.cpp.a -lm

qmanMailbox1: qmanMailbox1.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o qmanMailbox1 qmanMailbox1.cpp ../lib/csim.cpp.a -lm

qmanMailbox: qmanMailbox.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o qmanMailbox qmanMailbox.cpp ../lib/csim.cpp.a -lm

qmgr: qmgr.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o qmgr qmgr.cpp ../lib/csim.cpp.a -lm

rand: rand.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o rand rand.cpp ../lib/csim.cpp.a -lm

randStream: randStream.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o randStream randStream.cpp ../lib/csim.cpp.a -lm

rand_streams: rand_streams.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o rand_streams rand_streams.cpp ../lib/csim.cpp.a -lm

receiveAny: receiveAny.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o receiveAny receiveAny.cpp ../lib/csim.cpp.a -lm

rerun: rerun.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o rerun rerun.cpp ../lib/csim.cpp.a -lm

reset1: reset1.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o reset1 reset1.cpp ../lib/csim.cpp.a -lm

reset: reset.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o reset reset.cpp ../lib/csim.cpp.a -lm

rnd_pri: rnd_pri.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o rnd_pri rnd_pri.cpp ../lib/csim.cpp.a -lm

rnd_rob: rnd_rob.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o rnd_rob rnd_rob.cpp ../lib/csim.cpp.a -lm

stla: stla.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o stla stla.cpp ../lib/csim.cpp.a -lm

storages: storages.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o storages storages.cpp ../lib/csim.cpp.a -lm

syn_fac1: syn_fac1.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o syn_fac1 syn_fac1.cpp ../lib/csim.cpp.a -lm

syn_fac: syn_fac.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o syn_fac syn_fac.cpp ../lib/csim.cpp.a -lm

syn_stor: syn_stor.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o syn_stor syn_stor.cpp ../lib/csim.cpp.a -lm

tmd_resr: tmd_resr.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o tmd_resr tmd_resr.cpp ../lib/csim.cpp.a -lm

tmd_wait: tmd_wait.cpp ../lib/csim.cpp.a
	$(CXX) -DCPP -I../lib $(LDFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o tmd_wait tmd_wait.cpp ../lib/csim.cpp.a -lm

clean:
	rm -f classes1 classes client_s converg disk event_se ex1_stream exceptComplex except facility fac_ms gate gensys1 gensys2 gensys hist instrum jock mailbox_stats meter moving_average moving_q my_main myStuff prc_clas pre_res qhist qManEvent qManFac1 qManFac2 qManFac qmanMailbox1 qmanMailbox qmgr rand randStream rand_streams receiveAny rerun reset1 reset rnd_pri rnd_rob stla storages syn_fac1 syn_fac syn_stor tmd_resr tmd_wait
